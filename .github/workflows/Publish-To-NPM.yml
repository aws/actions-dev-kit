# This workflow will build and run tests using node and then publish a package to the public NPM repository
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish-To-NPM

on: [workflow_dispatch]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  GIT_COMMITTER_NAME: ActionsDevKitRelease
  GIT_COMMITTER_EMAIL: cawsactionextensions+adk-release@amazon.com

jobs:
  release-to-prod:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      # Allows to push to the main branch for
      - name: Git & SSH auth setup
        run: |
          sudo git config --system --add safe.directory "*"
          if [[  -n $SSH_PUBLIC_KEY && -n $SSH_PRIVATE_KEY ]]; then
              echo "SSH Key pair found, configuring signing..."
              mkdir ~/.ssh
              echo -e "$SSH_PRIVATE_KEY" >> ~/.ssh/signing_key
              cat ~/.ssh/signing_key
              echo -e "$SSH_PUBLIC_KEY" >> ~/.ssh/signing_key.pub
              cat ~/.ssh/signing_key.pub
              chmod 600 ~/.ssh/signing_key && chmod 600 ~/.ssh/signing_key.pub
              eval "$(ssh-agent)"
              ssh-add ~/.ssh/signing_key
              git config --global gpg.format ssh
              git config --global user.signingKey ~/.ssh/signing_key
              git config --global commit.gpgsign true
              git config --global user.email $GIT_COMMITTER_EMAIL
              git config --global user.name $GIT_COMMITTER_NAME
              touch ~/.ssh/allowed_signers
              echo "$GIT_COMMITTER_EMAIL $SSH_PUBLIC_KEY" > ~/.ssh/allowed_signers
              git config --global gpg.ssh.allowedSignersFile ~/.ssh/allowed_signers
          fi
      # Checkout main branch
      - uses: actions/checkout@v4
        with:
          # Checkout with ssh key to be able to push changes back to the branch.
          # The expected changes are:
          # - a version bump in the package.json files
          # - New commit that begins with chore(release):
          # - New tag for the new version release
          ssh-key: ${{ env.SSH_PRIVATE_KEY }}
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org/'
          cache: 'yarn'
          scope: '@aws'
      # Install dependencies
      - run: npm install -g npm@6.14.13
      - run: yarn --version
      - run: npm --version

      # Yarn Install
      - run: yarn --immutable-cache

      # Build project (also runs tests and packages dist) See packages/adk/adk-utils/.projen/tasks.json
      - run: yarn build

      # Bump all package versions
      - run: yarn projen bump
      - run: NEW_ADK_RELEASE_VERSION=`jq -r .version packages/adk/adk/package.json`
      - run: NEW_WORKFLOWS_SDK_RELEASE_VERSION=`jq -r .version packages/workflows/workflows-sdk/package.json`

      # Add and show changes
      - run: git add .
      - run: git status


      # Commit changes and create new version tag
      - run: RELEASE_COMMIT_MESSAGE="chore(release) release ADK v$NEW_ADK_RELEASE_VERSION and workflows-sdk v$NEW_WORKFLOWS_SDK_RELEASE_VERSION"
      - run: git commit -m "$RELEASE_COMMIT_MESSAGE"
      - run: git tag -a v$NEW_ADK_RELEASE_VERSION HEAD -m "$RELEASE_COMMIT_MESSAGE"

      # Push commits and tag
      - run: git push origin HEAD:main
      - run: git push origin v$NEW_ADK_RELEASE_VERSION

      # Ensure changes are up to date
      - run: git status
      - run: git pull

      # Publishes packages to NPM https://www.npmjs.com/~adk-npm-public-release
      - run: yarn projen npm:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
