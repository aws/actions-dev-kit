query getSoftwareCompositionAnalysisFinding($nextToken: String, $pageSize: Int, $input: GetSoftwareCompositionAnalysisFindingInput!){
    getSoftwareCompositionAnalysisFinding(input: $input){
        findingId
        name
        reportSummaryId
        repositoryName
        sourceRepository{
            id
            name
            projectName
            description
            defaultBranch
            lastUpdatedTime
            creationDate
            autoInitialize{
                repositoryTemplateType
                readmeType
                gitIgnoreType
            }
            metadata{
                providerCanonicalId
                providerCanonicalUrl
            }
            branches(nextToken: $nextToken, pageSize: $pageSize){
                nextToken
                items{
                    id
                    sourceRepositoryName
                    branchName
                    lastUpdatedTime
                    headCommitId
                    beforeCommitId
                    beforeDocumentCommitId
                    ordinal
                }
            }
        }
        branchName
        commitId
        severity{
            originalSeverity
            mappedSeverity
            mappedSeverityValue
        }
        score
        category
        rule{
            ruleId
            displayName
            description{
                content
                truncated
            }
            helpUrl
        }
        message{
            content
            truncated
        }
        recommendation{
            content
            truncated
        }
        location{
            physicalLocation{
                path
                startCoordinate{
                    lineNumber
                    columnNumber
                }
                endCoordinate{
                    lineNumber
                    columnNumber
                }
            }
            logicalLocation{
                fullyQualifiedName
            }
        }
        relatedLocations{
            truncated
            locations{
                physicalLocation{
                    path
                }
                logicalLocation{
                    fullyQualifiedName
                }
            }
        }
        additionalToolProperties{
            name
            value
        }
    }
}